apiVersion: apps/v1
kind: Deployment
metadata:
  name: "phpserver"
  labels:
    app: "phpserver"
spec:
  #usado para filtrar os pods com o mesmo label
  selector:
    matchLabels:
      app: "phpserver"
  replicas: 1
  template:
    metadata:
      name: "phpserver"
      labels:
        app: "phpserver"
    spec:
      containers:
      - name: "phpserver"
        image: "farofapereira/kubernetes-hello-php:v5"
        ##Defining env variable one-by-one
        # env:
        #   - name: NAME
        #     valueFrom:
        #       configMapKeyRef:
        #         name: phpserver-env
        #         key: NAME
        #   - name: AGE
        #     valueFrom:
        #       configMapKeyRef:
        #         name: phpserver-env
        #         key: AGE
        ##Define env variables by file
        envFrom:
          - configMapRef:
              name: phpserver-env
        volumeMounts:
          - mountPath: "/var/www/html/familyMembers"  #defined in Dockerfile
            name: config
            # readonly: true #optional
      ##Volume will inject files into containers
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: "family.txt"


# para aplicar configurações
# kubectl apply -f k8s/deployment.yml
# Ira gerar arquivos com o nome <deployment_name>-<replicaset_name>-<pod_name>

# Get all deployments
# kubectl get deployents

# pegar o historico de versoes do deployment
# kubectl rollout history deployment <deployment_name>

# fazer rollout de deployment
# kubectl rollout undo deployment <deployment_name>
# kubectl rollout undo deployment <deployment_name> --to-revision=<revision_number>
