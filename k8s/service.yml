apiVersion: v1
kind: Service
metadata:
  name: "phpserver-service"
spec:
  selector:
    app: "phpserver"
  type: LoadBalancer
  ports:
    - name: phpserver-service #optional
      port: 8005 #Porta do Serviço rodando no kubernetes
      targetPort: 80 #porta do container, quando é omitido o kubernetes assume que é a mesma porta do serviço
      protocol: TCP

# port forward
# kubectl port-forward svc/phpserver-service <local_port>:<service_port>
# kubectl port-forward svc/phpserver-service 8003:8005
# kubernetes funciona com redirecionamento triplo de portas
#     Ao acessar a porta local (8003)
#         é redirecionado para a porta do serviço (8005)
#         que redireciona para a porta do container (80)

# NodePort (muito raro ser usado, porque geralmente tem serviços mais adequados)
#   Gera uma porta entre 30000 e 32767
#   Libera essa porta em todos os nodes
#   Permite o acesso ao serviço usando <ip_da_maquina>:<node_port> 
#   Somente acessivel dentro da rede do cluster

# LoadBalancer
#   Gera um ip publico (externo) para acessar a aplicação
#   Muito utilizado quando utiliza um cluster gerenciado ex: EKS
#   Se rodar localmente, o ip externo nao será gerado
#   Quando usa LoadBalancer ele automaticamente gera uma NodePort
#   Só use quando quiser expor a aplicação para a rede externa 
#       microservicos é melhor usar LoadBalancer para os serviços publicos (api, frontend, etc) e ClusterIp para os 
#       serviços internos (mysql, microservices, etc)